apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","component":"oms-agent","kubernetes.io/cluster-service":"true","tier":"node"},"name":"omsagent","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"component":"oms-agent","tier":"node"}},"template":{"metadata":{"annotations":{"WSID":"YTViMjk1NTYtZDEzNC00ZDM5LWI4MmUtNzg0ZTYzYjBlM2Y4","agentVersion":"1.10.0.1","dockerProviderVersion":"13.0.0-0","schema-versions":"v1"},"labels":{"component":"oms-agent","kubernetes.azure.com/managedby":"aks","tier":"node"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/os","operator":"In","values":["linux"]},{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]}]}]}}},"containers":[{"env":[{"name":"NODE_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"AKS_CLUSTER_NAME","value":"ohnewAKSCluster"},{"name":"AKS_RESOURCE_ID","value":"/subscriptions/442f0218-2057-41f9-8c35-1dfcbc4691c0/resourceGroups/ohnewAKSCluster-rg/providers/Microsoft.ContainerService/managedClusters/ohnewAKSCluster"},{"name":"AKS_NODE_RESOURCE_GROUP","value":"MC_ohnewAKSCluster-rg_ohnewAKSCluster_eastasia"},{"name":"AKS_REGION","value":"eastasia"},{"name":"CONTROLLER_TYPE","value":"DaemonSet"},{"name":"USER_ASSIGNED_IDENTITY_CLIENT_ID","value":""},{"name":"AZMON_CONTAINERLOGS_ONEAGENT_REGIONS","value":"koreacentral,norwayeast"}],"image":"mcr.microsoft.com/azuremonitor/containerinsights/ciprod:ciprod02232021","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/livenessprobe.sh"]},"initialDelaySeconds":60,"periodSeconds":60},"name":"omsagent","ports":[{"containerPort":25225,"protocol":"TCP"},{"containerPort":25224,"protocol":"UDP"}],"resources":{"limits":{"cpu":"500m","memory":"600Mi"},"requests":{"cpu":"75m","memory":"225Mi"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/hostfs","name":"host-root","readOnly":true},{"mountPath":"/var/run/host","name":"docker-sock"},{"mountPath":"/var/log","name":"host-log"},{"mountPath":"/var/lib/docker/containers","name":"containerlog-path","readOnly":true},{"mountPath":"/mnt/docker","name":"containerlog-path-2","readOnly":true},{"mountPath":"/mnt/containers","name":"containerlog-path-3","readOnly":true},{"mountPath":"/etc/kubernetes/host","name":"azure-json-path"},{"mountPath":"/etc/omsagent-secret","name":"omsagent-secret","readOnly":true},{"mountPath":"/etc/config/settings","name":"settings-vol-config","readOnly":true},{"mountPath":"/etc/config/settings/adx","name":"omsagent-adx-secret","readOnly":true}]}],"dnsConfig":{"options":[{"name":"ndots","value":"3"}]},"priorityClassName":"system-node-critical","serviceAccountName":"omsagent","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"},{"effect":"PreferNoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/"},"name":"host-root"},{"hostPath":{"path":"/var/run"},"name":"docker-sock"},{"hostPath":{"path":"/etc/hostname"},"name":"container-hostname"},{"hostPath":{"path":"/var/log"},"name":"host-log"},{"hostPath":{"path":"/var/lib/docker/containers"},"name":"containerlog-path"},{"hostPath":{"path":"/mnt/docker"},"name":"containerlog-path-2"},{"hostPath":{"path":"/mnt/containers"},"name":"containerlog-path-3"},{"hostPath":{"path":"/etc/kubernetes"},"name":"azure-json-path"},{"name":"omsagent-secret","secret":{"secretName":"omsagent-secret"}},{"configMap":{"name":"container-azm-ms-agentconfig","optional":true},"name":"settings-vol-config"},{"name":"omsagent-adx-secret","secret":{"optional":true,"secretName":"omsagent-adx-secret"}}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":"50%"},"type":"RollingUpdate"}}}
  creationTimestamp: "2021-03-10T06:00:46Z"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    component: oms-agent
    kubernetes.io/cluster-service: "true"
    tier: node
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deprecated.daemonset.template.generation: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:addonmanager.kubernetes.io/mode: {}
          f:component: {}
          f:kubernetes.io/cluster-service: {}
          f:tier: {}
      f:spec:
        f:revisionHistoryLimit: {}
        f:selector:
          f:matchLabels:
            .: {}
            f:component: {}
            f:tier: {}
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:WSID: {}
              f:agentVersion: {}
              f:dockerProviderVersion: {}
              f:schema-versions: {}
            f:labels:
              .: {}
              f:component: {}
              f:kubernetes.azure.com/managedby: {}
              f:tier: {}
          f:spec:
            f:affinity:
              .: {}
              f:nodeAffinity:
                .: {}
                f:requiredDuringSchedulingIgnoredDuringExecution:
                  .: {}
                  f:nodeSelectorTerms: {}
            f:containers:
              k:{"name":"omsagent"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"AKS_CLUSTER_NAME"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"AKS_NODE_RESOURCE_GROUP"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"AKS_REGION"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"AKS_RESOURCE_ID"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"AZMON_CONTAINERLOGS_ONEAGENT_REGIONS"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONTROLLER_TYPE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"NODE_IP"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef:
                        .: {}
                        f:apiVersion: {}
                        f:fieldPath: {}
                  k:{"name":"USER_ASSIGNED_IDENTITY_CLIENT_ID"}:
                    .: {}
                    f:name: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:livenessProbe:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
                  f:failureThreshold: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":25224,"protocol":"UDP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                  k:{"containerPort":25225,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:privileged: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/config/settings"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/etc/config/settings/adx"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/etc/kubernetes/host"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/etc/omsagent-secret"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/hostfs"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/mnt/containers"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/mnt/docker"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/lib/docker/containers"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/log"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/host"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsConfig:
              .: {}
              f:options: {}
            f:dnsPolicy: {}
            f:priorityClassName: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:tolerations: {}
            f:volumes:
              .: {}
              k:{"name":"azure-json-path"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"container-hostname"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"containerlog-path"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"containerlog-path-2"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"containerlog-path-3"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"docker-sock"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"host-log"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"host-root"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"omsagent-adx-secret"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:optional: {}
                  f:secretName: {}
              k:{"name":"omsagent-secret"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"settings-vol-config"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                  f:optional: {}
                f:name: {}
        f:updateStrategy:
          f:rollingUpdate:
            .: {}
            f:maxUnavailable: {}
          f:type: {}
    manager: kubectl
    operation: Update
    time: "2021-03-10T06:00:46Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:currentNumberScheduled: {}
        f:desiredNumberScheduled: {}
        f:numberAvailable: {}
        f:numberReady: {}
        f:observedGeneration: {}
        f:updatedNumberScheduled: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-03-11T01:36:04Z"
  name: omsagent
  namespace: kube-system
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      component: oms-agent
      tier: node
  template:
    metadata:
      annotations:
        WSID: YTViMjk1NTYtZDEzNC00ZDM5LWI4MmUtNzg0ZTYzYjBlM2Y4
        agentVersion: 1.10.0.1
        dockerProviderVersion: 13.0.0-0
        schema-versions: v1
      creationTimestamp: null
      labels:
        component: oms-agent
        kubernetes.azure.com/managedby: aks
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.azure.com/cluster
                operator: Exists
              - key: type
                operator: NotIn
                values:
                - virtual-kubelet
      containers:
      - env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: AKS_CLUSTER_NAME
          value: ohnewAKSCluster
        - name: AKS_RESOURCE_ID
          value: /subscriptions/442f0218-2057-41f9-8c35-1dfcbc4691c0/resourceGroups/ohnewAKSCluster-rg/providers/Microsoft.ContainerService/managedClusters/ohnewAKSCluster
        - name: AKS_NODE_RESOURCE_GROUP
          value: MC_ohnewAKSCluster-rg_ohnewAKSCluster_eastasia
        - name: AKS_REGION
          value: eastasia
        - name: CONTROLLER_TYPE
          value: DaemonSet
        - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
          value: koreacentral,norwayeast
        image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:ciprod02232021
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /opt/livenessprobe.sh
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        name: omsagent
        ports:
        - containerPort: 25225
          protocol: TCP
        - containerPort: 25224
          protocol: UDP
        resources:
          limits:
            cpu: 500m
            memory: 600Mi
          requests:
            cpu: 75m
            memory: 225Mi
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /hostfs
          name: host-root
          readOnly: true
        - mountPath: /var/run/host
          name: docker-sock
        - mountPath: /var/log
          name: host-log
        - mountPath: /var/lib/docker/containers
          name: containerlog-path
          readOnly: true
        - mountPath: /mnt/docker
          name: containerlog-path-2
          readOnly: true
        - mountPath: /mnt/containers
          name: containerlog-path-3
          readOnly: true
        - mountPath: /etc/kubernetes/host
          name: azure-json-path
        - mountPath: /etc/omsagent-secret
          name: omsagent-secret
          readOnly: true
        - mountPath: /etc/config/settings
          name: settings-vol-config
          readOnly: true
        - mountPath: /etc/config/settings/adx
          name: omsagent-adx-secret
          readOnly: true
      dnsConfig:
        options:
        - name: ndots
          value: "3"
      dnsPolicy: ClusterFirst
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: omsagent
      serviceAccountName: omsagent
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      - effect: PreferNoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /
          type: ""
        name: host-root
      - hostPath:
          path: /var/run
          type: ""
        name: docker-sock
      - hostPath:
          path: /etc/hostname
          type: ""
        name: container-hostname
      - hostPath:
          path: /var/log
          type: ""
        name: host-log
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: containerlog-path
      - hostPath:
          path: /mnt/docker
          type: ""
        name: containerlog-path-2
      - hostPath:
          path: /mnt/containers
          type: ""
        name: containerlog-path-3
      - hostPath:
          path: /etc/kubernetes
          type: ""
        name: azure-json-path
      - name: omsagent-secret
        secret:
          defaultMode: 420
          secretName: omsagent-secret
      - configMap:
          defaultMode: 420
          name: container-azm-ms-agentconfig
          optional: true
        name: settings-vol-config
      - name: omsagent-adx-secret
        secret:
          defaultMode: 420
          optional: true
          secretName: omsagent-adx-secret
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 50%
    type: RollingUpdate
