apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2021-03-10T06:00:46Z"
  labels:
    kubernetes.azure.com/managedby: aks
    pod-template-hash: 7bbd897856
    rsName: omsagent-rs
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/desired-replicas: {}
          f:deployment.kubernetes.io/max-replicas: {}
          f:deployment.kubernetes.io/revision: {}
        f:labels:
          .: {}
          f:kubernetes.azure.com/managedby: {}
          f:pod-template-hash: {}
          f:rsName: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"196dd445-dc8b-495a-83ec-2ea258a9fc40"}:
            .: {}
            f:apiVersion: {}
            f:blockOwnerDeletion: {}
            f:controller: {}
            f:kind: {}
            f:name: {}
            f:uid: {}
      f:spec:
        f:replicas: {}
        f:selector:
          f:matchLabels:
            .: {}
            f:pod-template-hash: {}
            f:rsName: {}
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:WSID: {}
              f:agentVersion: {}
              f:cluster-autoscaler.kubernetes.io/safe-to-evict: {}
              f:dockerProviderVersion: {}
              f:schema-versions: {}
            f:labels:
              .: {}
              f:kubernetes.azure.com/managedby: {}
              f:pod-template-hash: {}
              f:rsName: {}
          f:spec:
            f:affinity:
              .: {}
              f:nodeAffinity:
                .: {}
                f:preferredDuringSchedulingIgnoredDuringExecution: {}
                f:requiredDuringSchedulingIgnoredDuringExecution:
                  .: {}
                  f:nodeSelectorTerms: {}
            f:containers:
              k:{"name":"omsagent"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"AKS_CLUSTER_NAME"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"AKS_NODE_RESOURCE_GROUP"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"AKS_REGION"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"AKS_RESOURCE_ID"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CONTROLLER_TYPE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"NODE_IP"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef:
                        .: {}
                        f:apiVersion: {}
                        f:fieldPath: {}
                  k:{"name":"USER_ASSIGNED_IDENTITY_CLIENT_ID"}:
                    .: {}
                    f:name: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:livenessProbe:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
                  f:failureThreshold: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":25224,"protocol":"UDP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                  k:{"containerPort":25225,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                  k:{"containerPort":25227,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:privileged: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/config"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/etc/config/settings"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/etc/config/settings/adx"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/etc/kubernetes/host"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/etc/omsagent-secret"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/log"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/host"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:priorityClassName: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:tolerations: {}
            f:volumes:
              .: {}
              k:{"name":"azure-json-path"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"container-hostname"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"docker-sock"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"host-log"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"omsagent-adx-secret"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:optional: {}
                  f:secretName: {}
              k:{"name":"omsagent-rs-config"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"omsagent-secret"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"settings-vol-config"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                  f:optional: {}
                f:name: {}
      f:status:
        f:availableReplicas: {}
        f:fullyLabeledReplicas: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-03-10T06:01:56Z"
  name: omsagent-rs-7bbd897856
  namespace: kube-system
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: omsagent-rs
    uid: 196dd445-dc8b-495a-83ec-2ea258a9fc40
spec:
  replicas: 1
  selector:
    matchLabels:
      pod-template-hash: 7bbd897856
      rsName: omsagent-rs
  template:
    metadata:
      annotations:
        WSID: YTViMjk1NTYtZDEzNC00ZDM5LWI4MmUtNzg0ZTYzYjBlM2Y4
        agentVersion: 1.10.0.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        dockerProviderVersion: 13.0.0-0
        schema-versions: v1
      creationTimestamp: null
      labels:
        kubernetes.azure.com/managedby: aks
        pod-template-hash: 7bbd897856
        rsName: omsagent-rs
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: In
                values:
                - system
            weight: 100
          - preference:
              matchExpressions:
              - key: storageprofile
                operator: NotIn
                values:
                - managed
            weight: 1
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/role
                operator: In
                values:
                - agent
              - key: kubernetes.azure.com/cluster
                operator: Exists
              - key: type
                operator: NotIn
                values:
                - virtual-kubelet
      containers:
      - env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: AKS_CLUSTER_NAME
          value: ohnewAKSCluster
        - name: AKS_RESOURCE_ID
          value: /subscriptions/442f0218-2057-41f9-8c35-1dfcbc4691c0/resourceGroups/ohnewAKSCluster-rg/providers/Microsoft.ContainerService/managedClusters/ohnewAKSCluster
        - name: AKS_NODE_RESOURCE_GROUP
          value: MC_ohnewAKSCluster-rg_ohnewAKSCluster_eastasia
        - name: AKS_REGION
          value: eastasia
        - name: CONTROLLER_TYPE
          value: ReplicaSet
        - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:ciprod02232021
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /opt/livenessprobe.sh
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        name: omsagent
        ports:
        - containerPort: 25225
          protocol: TCP
        - containerPort: 25224
          protocol: UDP
        - containerPort: 25227
          name: in-rs-tcp
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 150m
            memory: 250Mi
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run/host
          name: docker-sock
        - mountPath: /var/log
          name: host-log
        - mountPath: /etc/kubernetes/host
          name: azure-json-path
        - mountPath: /etc/omsagent-secret
          name: omsagent-secret
          readOnly: true
        - mountPath: /etc/config
          name: omsagent-rs-config
        - mountPath: /etc/config/settings
          name: settings-vol-config
          readOnly: true
        - mountPath: /etc/config/settings/adx
          name: omsagent-adx-secret
          readOnly: true
      dnsPolicy: ClusterFirst
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: omsagent
      serviceAccountName: omsagent
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - hostPath:
          path: /var/run
          type: ""
        name: docker-sock
      - hostPath:
          path: /etc/hostname
          type: ""
        name: container-hostname
      - hostPath:
          path: /var/log
          type: ""
        name: host-log
      - hostPath:
          path: /etc/kubernetes
          type: ""
        name: azure-json-path
      - name: omsagent-secret
        secret:
          defaultMode: 420
          secretName: omsagent-secret
      - configMap:
          defaultMode: 420
          name: omsagent-rs-config
        name: omsagent-rs-config
      - configMap:
          defaultMode: 420
          name: container-azm-ms-agentconfig
          optional: true
        name: settings-vol-config
      - name: omsagent-adx-secret
        secret:
          defaultMode: 420
          optional: true
          secretName: omsagent-adx-secret
