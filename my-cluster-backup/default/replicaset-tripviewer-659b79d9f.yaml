apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "3"
    deployment.kubernetes.io/max-replicas: "3"
    deployment.kubernetes.io/revision: "3"
  creationTimestamp: "2021-03-10T07:30:43Z"
  labels:
    app: tripviewer
    env: OpenHack
    pod-template-hash: 659b79d9f
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/desired-replicas: {}
          f:deployment.kubernetes.io/max-replicas: {}
          f:deployment.kubernetes.io/revision: {}
        f:labels:
          .: {}
          f:app: {}
          f:env: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"a1816d5e-76b6-4e94-831e-fa5109312555"}:
            .: {}
            f:apiVersion: {}
            f:blockOwnerDeletion: {}
            f:controller: {}
            f:kind: {}
            f:name: {}
            f:uid: {}
      f:spec:
        f:replicas: {}
        f:selector:
          f:matchLabels:
            .: {}
            f:app: {}
            f:env: {}
            f:pod-template-hash: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
              f:env: {}
              f:pod-template-hash: {}
          f:spec:
            f:containers:
              k:{"name":"tripviewer"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"TRIPS_API_ENDPOINT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"USERPROFILE_API_ENDPOINT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/secret"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"secrets-store-inline"}:
                .: {}
                f:csi:
                  .: {}
                  f:driver: {}
                  f:nodePublishSecretRef:
                    .: {}
                    f:name: {}
                  f:readOnly: {}
                  f:volumeAttributes:
                    .: {}
                    f:secretProviderClass: {}
                f:name: {}
      f:status:
        f:availableReplicas: {}
        f:fullyLabeledReplicas: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-03-10T07:30:50Z"
  name: tripviewer-659b79d9f
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: tripviewer
    uid: a1816d5e-76b6-4e94-831e-fa5109312555
spec:
  replicas: 3
  selector:
    matchLabels:
      app: tripviewer
      env: OpenHack
      pod-template-hash: 659b79d9f
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: tripviewer
        env: OpenHack
        pod-template-hash: 659b79d9f
    spec:
      containers:
      - env:
        - name: TRIPS_API_ENDPOINT
          value: http://trips.default.svc.cluster.local
        - name: USERPROFILE_API_ENDPOINT
          value: http://userprofile.default.svc.cluster.local
        image: registryjya8643.azurecr.io/tripviewer:1.0
        imagePullPolicy: IfNotPresent
        name: tripviewer
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /secret
          name: secrets-store-inline
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - csi:
          driver: secrets-store.csi.k8s.io
          nodePublishSecretRef:
            name: secrets-store-creds
          readOnly: true
          volumeAttributes:
            secretProviderClass: aks-keyvault-openhack
        name: secrets-store-inline
