apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
    meta.helm.sh/release-name: csi
    meta.helm.sh/release-namespace: default
  creationTimestamp: "2021-03-10T06:30:39Z"
  labels:
    app: csi-secrets-store-provider-azure
    app.kubernetes.io/instance: csi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: csi-secrets-store-provider-azure
    app.kubernetes.io/version: 0.0.13
    helm.sh/chart: csi-secrets-store-provider-azure-0.0.17
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deprecated.daemonset.template.generation: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
        f:labels:
          .: {}
          f:app: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/version: {}
          f:helm.sh/chart: {}
      f:spec:
        f:revisionHistoryLimit: {}
        f:selector:
          f:matchLabels:
            .: {}
            f:app: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
              f:app.kubernetes.io/instance: {}
              f:app.kubernetes.io/managed-by: {}
              f:app.kubernetes.io/name: {}
              f:app.kubernetes.io/version: {}
              f:helm.sh/chart: {}
          f:spec:
            f:containers:
              k:{"name":"provider-azure-installer"}:
                .: {}
                f:args: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:lifecycle:
                  .: {}
                  f:preStop:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                f:livenessProbe:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
                  f:failureThreshold: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:readinessProbe:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
                  f:failureThreshold: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/provider"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/lib/kubelet/pods"}:
                    .: {}
                    f:mountPath: {}
                    f:mountPropagation: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:hostNetwork: {}
            f:nodeSelector:
              .: {}
              f:kubernetes.io/os: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"mountpoint-dir"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"provider-vol"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
        f:updateStrategy:
          f:rollingUpdate:
            .: {}
            f:maxUnavailable: {}
          f:type: {}
    manager: Go-http-client
    operation: Update
    time: "2021-03-10T06:30:39Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:currentNumberScheduled: {}
        f:desiredNumberScheduled: {}
        f:numberAvailable: {}
        f:numberReady: {}
        f:observedGeneration: {}
        f:updatedNumberScheduled: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-03-11T01:36:06Z"
  name: csi-csi-secrets-store-provider-azure
  namespace: default
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: csi-secrets-store-provider-azure
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: csi-secrets-store-provider-azure
        app.kubernetes.io/instance: csi
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: csi-secrets-store-provider-azure
        app.kubernetes.io/version: 0.0.13
        helm.sh/chart: csi-secrets-store-provider-azure-0.0.17
    spec:
      containers:
      - args:
        - --endpoint=unix:///provider/azure.sock
        image: mcr.microsoft.com/oss/azure/secrets-store/provider-azure:0.0.13
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - rm /provider/azure.sock
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=unix:///provider/azure.sock
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: provider-azure-installer
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=unix:///provider/azure.sock
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 50m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /provider
          name: provider-vol
        - mountPath: /var/lib/kubelet/pods
          mountPropagation: HostToContainer
          name: mountpoint-dir
      dnsPolicy: ClusterFirst
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: csi-secrets-store-provider-azure
      serviceAccountName: csi-secrets-store-provider-azure
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /etc/kubernetes/secrets-store-csi-providers
          type: ""
        name: provider-vol
      - hostPath:
          path: /var/lib/kubelet/pods
          type: ""
        name: mountpoint-dir
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
