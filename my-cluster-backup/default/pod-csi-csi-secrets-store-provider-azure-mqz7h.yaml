apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2021-03-10T06:30:39Z"
  generateName: csi-csi-secrets-store-provider-azure-
  labels:
    app: csi-secrets-store-provider-azure
    app.kubernetes.io/instance: csi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: csi-secrets-store-provider-azure
    app.kubernetes.io/version: 0.0.13
    controller-revision-hash: 5cbff7b9
    helm.sh/chart: csi-secrets-store-provider-azure-0.0.17
    pod-template-generation: "1"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:generateName: {}
        f:labels:
          .: {}
          f:app: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/version: {}
          f:controller-revision-hash: {}
          f:helm.sh/chart: {}
          f:pod-template-generation: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"a4141eac-50ba-4b31-9e5e-ec551f511143"}:
            .: {}
            f:apiVersion: {}
            f:blockOwnerDeletion: {}
            f:controller: {}
            f:kind: {}
            f:name: {}
            f:uid: {}
      f:spec:
        f:affinity:
          .: {}
          f:nodeAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution:
              .: {}
              f:nodeSelectorTerms: {}
        f:containers:
          k:{"name":"provider-azure-installer"}:
            .: {}
            f:args: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:lifecycle:
              .: {}
              f:preStop:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
            f:livenessProbe:
              .: {}
              f:exec:
                .: {}
                f:command: {}
              f:failureThreshold: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:readinessProbe:
              .: {}
              f:exec:
                .: {}
                f:command: {}
              f:failureThreshold: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:limits:
                .: {}
                f:cpu: {}
                f:memory: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/provider"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/lib/kubelet/pods"}:
                .: {}
                f:mountPath: {}
                f:mountPropagation: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostNetwork: {}
        f:nodeSelector:
          .: {}
          f:kubernetes.io/os: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"mountpoint-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"provider-vol"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-03-10T06:30:39Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.2.1.97"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    time: "2021-03-10T06:30:52Z"
  name: csi-csi-secrets-store-provider-azure-mqz7h
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: csi-csi-secrets-store-provider-azure
    uid: a4141eac-50ba-4b31-9e5e-ec551f511143
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - aks-agentpool-38943226-vmss000000
  containers:
  - args:
    - --endpoint=unix:///provider/azure.sock
    image: mcr.microsoft.com/oss/azure/secrets-store/provider-azure:0.0.13
    imagePullPolicy: IfNotPresent
    lifecycle:
      preStop:
        exec:
          command:
          - rm /provider/azure.sock
    livenessProbe:
      exec:
        command:
        - /bin/grpc_health_probe
        - -addr=unix:///provider/azure.sock
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: provider-azure-installer
    readinessProbe:
      exec:
        command:
        - /bin/grpc_health_probe
        - -addr=unix:///provider/azure.sock
      failureThreshold: 3
      initialDelaySeconds: 3
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits:
        cpu: 50m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 100Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /provider
      name: provider-vol
    - mountPath: /var/lib/kubelet/pods
      mountPropagation: HostToContainer
      name: mountpoint-dir
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: csi-secrets-store-provider-azure-token-zfc69
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  nodeName: aks-agentpool-38943226-vmss000000
  nodeSelector:
    kubernetes.io/os: linux
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: csi-secrets-store-provider-azure
  serviceAccountName: csi-secrets-store-provider-azure
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/disk-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/pid-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/unschedulable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/network-unavailable
    operator: Exists
  volumes:
  - hostPath:
      path: /etc/kubernetes/secrets-store-csi-providers
      type: ""
    name: provider-vol
  - hostPath:
      path: /var/lib/kubelet/pods
      type: ""
    name: mountpoint-dir
  - name: csi-secrets-store-provider-azure-token-zfc69
    secret:
      defaultMode: 420
      secretName: csi-secrets-store-provider-azure-token-zfc69
